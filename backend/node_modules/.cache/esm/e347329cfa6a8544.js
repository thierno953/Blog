let express,dotenv,colors,path,connectDB,userRoutes,postRoutes,errorResponseHandler,invalidPathHandler;_fa6‍.w("express",[["default",["express"],function(v){express=v}]]);_fa6‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_fa6‍.w("colors",[["default",["colors"],function(v){colors=v}]]);_fa6‍.w("path",[["default",["path"],function(v){path=v}]]);_fa6‍.w("./config/db",[["default",["connectDB"],function(v){connectDB=v}]]);_fa6‍.w("./routes/userRoutes",[["default",["userRoutes"],function(v){userRoutes=v}]]);_fa6‍.w("./routes/postRoutes",[["default",["postRoutes"],function(v){postRoutes=v}]]);_fa6‍.w("./middleware/errorHandler",[["errorResponseHandler",["errorResponseHandler"],function(v){errorResponseHandler=v}],["invalidPathHandler",["invalidPathHandler"],function(v){invalidPathHandler=v}]]);





// Routes








//Dot ENV config
dotenv.config();

// mongodb connection
connectDB();

//rest object
const app = express();

//middelwares
app.use(express.json());

//routes
app.get("/", (req, res) => {
  res.send("Server is running...");
});

app.use("/api/users", userRoutes);
app.use("/api/posts", postRoutes);

// static assets
app.use("/uploads", express.static(path.join(__dirname, "/uploads")));

app.use(invalidPathHandler);
app.use(errorResponseHandler);

//port
const PORT = process.env.PORT || 5000;

//listen
app.listen(PORT, () => {
  _fa6‍.g.console.log(
    `Node Server Running In ${process.env.NODE_ENV} Mode on port no ${PORT}`
      .bgCyan.white
  );
});
