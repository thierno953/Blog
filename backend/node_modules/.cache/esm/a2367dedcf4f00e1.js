let User;_cf4‍.x([["registerUser",()=>registerUser],["loginUser",()=>loginUser],["userProfile",()=>userProfile],["updateProfile",()=>updateProfile],["updateProfilePicture",()=>updateProfilePicture]]);_cf4‍.w("../models/User",[["default",["User"],function(v){User=v}]]);

const registerUser = async (req, res, next) => {
  try {
    const { name, email, password } = req.body;

    // check wheter the user exists or not
    let user = await User.findOne({ email });
    if (user) {
      // return res.status(400).json({ message: "User have already registered" });
      throw new Error("User have already registered");
    }
    // creating a new user
    user = await User.create({
      email,
      name,
      password,
    });

    return res.status(201).json({
      _id: user._id,
      avatar: user.avatar,
      name: user.name,
      email: user.email,
      verified: user.verified,
      admin: user.admin,
      token: await user.generateJWT(),
    });
  } catch (error) {
    next(error);
  }
};

const loginUser = async (req, res, next) => {
  try {
  } catch (error) {
    next(error);
  }
};

const userProfile = async (req, res, next) => {
  try {
  } catch (error) {
    next(error);
  }
};

const updateProfile = async (req, res, next) => {
  try {
  } catch (error) {
    next(error);
  }
};

const updateProfilePicture = async (req, res, next) => {
  try {
  } catch (error) {
    next(error);
  }
};








